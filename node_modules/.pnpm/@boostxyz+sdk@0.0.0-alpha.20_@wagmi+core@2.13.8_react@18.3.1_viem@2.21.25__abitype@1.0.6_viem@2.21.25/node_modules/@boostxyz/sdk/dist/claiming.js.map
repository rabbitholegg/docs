{"version":3,"file":"claiming.js","sources":["../src/claiming.ts"],"sourcesContent":["import { type Address, type Hex, encodeAbiParameters, zeroHash } from 'viem';\n\n/**\n * Enum representing incentive disbursement strategies.\n *\n * @export\n * @enum {number}\n */\nexport enum StrategyType {\n  POOL = 0,\n  MINT = 1,\n  RAFFLE = 2,\n}\n\n/**\n * The object representation of an `Incentive.ClaimPayload`\n *\n * @export\n * @interface ClaimPayload\n * @typedef {ClaimPayload}\n */\nexport interface ClaimPayload {\n  /**\n   * The address of the recipient\n   *\n   * @type {Address}\n   */\n  target: Address;\n  /**\n   * The implementation-specific data for the claim, if needed\n   *\n   * @type {?Hex}\n   */\n  data?: Hex;\n}\n\n/**\n * Given a valid {@link ClaimPayload}, encode the payload for use with Incentive operations.\n *\n * @param {ClaimPayload} param0\n * @param {Address} param0.target - The address of the recipient\n * @param {Hex} [param0.data=zeroHash] - The implementation-specific data for the claim, if needed\n * @returns {Hex}\n */\nexport const prepareClaimPayload = ({\n  target,\n  data = zeroHash,\n}: ClaimPayload) => {\n  return encodeAbiParameters(\n    [\n      { type: 'address', name: 'target' },\n      { type: 'bytes', name: 'data' },\n    ],\n    [target, data],\n  );\n};\n"],"names":["StrategyType","prepareClaimPayload","target","data","zeroHash","encodeAbiParameters"],"mappings":";AAQY,IAAAA,sBAAAA,OACVA,EAAAA,EAAA,OAAO,CAAP,IAAA,QACAA,EAAAA,EAAA,OAAO,CAAP,IAAA,QACAA,EAAAA,EAAA,SAAS,CAAT,IAAA,UAHUA,IAAAA,KAAA,CAAA,CAAA;AAoCL,MAAMC,IAAsB,CAAC;AAAA,EAClC,QAAAC;AAAA,EACA,MAAAC,IAAOC;AACT,MACSC;AAAA,EACL;AAAA,IACE,EAAE,MAAM,WAAW,MAAM,SAAS;AAAA,IAClC,EAAE,MAAM,SAAS,MAAM,OAAO;AAAA,EAChC;AAAA,EACA,CAACH,GAAQC,CAAI;AAAA;"}