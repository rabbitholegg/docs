import { simulateContract as U, readContract as P, writeContract as j } from "viem/actions";
import { createClient as S, custom as V } from "viem";
import { parseAccount as Z, getAddress as $ } from "viem/utils";
function A(t) {
  const a = t.state.current, e = t.state.connections.get(a), i = e == null ? void 0 : e.accounts, y = i == null ? void 0 : i[0], u = t.chains.find((T) => T.id === (e == null ? void 0 : e.chainId)), r = t.state.status;
  switch (r) {
    case "connected":
      return {
        address: y,
        addresses: i,
        chain: u,
        chainId: e == null ? void 0 : e.chainId,
        connector: e == null ? void 0 : e.connector,
        isConnected: !0,
        isConnecting: !1,
        isDisconnected: !1,
        isReconnecting: !1,
        status: r
      };
    case "reconnecting":
      return {
        address: y,
        addresses: i,
        chain: u,
        chainId: e == null ? void 0 : e.chainId,
        connector: e == null ? void 0 : e.connector,
        isConnected: !!y,
        isConnecting: !1,
        isDisconnected: !1,
        isReconnecting: !0,
        status: r
      };
    case "connecting":
      return {
        address: y,
        addresses: i,
        chain: u,
        chainId: e == null ? void 0 : e.chainId,
        connector: e == null ? void 0 : e.connector,
        isConnected: !1,
        isConnecting: !0,
        isDisconnected: !1,
        isReconnecting: !1,
        status: r
      };
    case "disconnected":
      return {
        address: void 0,
        addresses: void 0,
        chain: void 0,
        chainId: void 0,
        connector: void 0,
        isConnected: !1,
        isConnecting: !1,
        isDisconnected: !0,
        isReconnecting: !1,
        status: r
      };
  }
}
function R(t) {
  return t.state.chainId;
}
function _(t, a, e) {
  const i = t[a.name];
  if (typeof i == "function")
    return i;
  const y = t[e];
  return typeof y == "function" ? y : (u) => a(t, u);
}
const G = "2.13.8", W = () => `@wagmi/core@${G}`;
var D = function(t, a, e, i) {
  if (e === "a" && !i) throw new TypeError("Private accessor was defined without a getter");
  if (typeof a == "function" ? t !== a || !i : !a.has(t)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return e === "m" ? i : e === "a" ? i.call(t) : i ? i.value : a.get(t);
}, N, F;
class I extends Error {
  get docsBaseUrl() {
    return "https://wagmi.sh/core";
  }
  get version() {
    return W();
  }
  constructor(a, e = {}) {
    var i;
    super(), N.add(this), Object.defineProperty(this, "details", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "docsPath", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "metaMessages", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "shortMessage", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: void 0
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "WagmiCoreError"
    });
    const y = e.cause instanceof I ? e.cause.details : (i = e.cause) != null && i.message ? e.cause.message : e.details, u = e.cause instanceof I && e.cause.docsPath || e.docsPath;
    this.message = [
      a || "An error occurred.",
      "",
      ...e.metaMessages ? [...e.metaMessages, ""] : [],
      ...u ? [
        `Docs: ${this.docsBaseUrl}${u}.html${e.docsSlug ? `#${e.docsSlug}` : ""}`
      ] : [],
      ...y ? [`Details: ${y}`] : [],
      `Version: ${this.version}`
    ].join(`
`), e.cause && (this.cause = e.cause), this.details = y, this.docsPath = u, this.metaMessages = e.metaMessages, this.shortMessage = a;
  }
  walk(a) {
    return D(this, N, "m", F).call(this, this, a);
  }
}
N = /* @__PURE__ */ new WeakSet(), F = function t(a, e) {
  return e != null && e(a) ? a : a.cause ? D(this, N, "m", t).call(this, a.cause, e) : a;
};
class J extends I {
  constructor() {
    super("Connector not connected."), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "ConnectorNotConnectedError"
    });
  }
}
class Q extends I {
  constructor({ address: a, connector: e }) {
    super(`Account "${a}" not found for connector "${e.name}".`), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "ConnectorAccountNotFoundError"
    });
  }
}
class K extends I {
  constructor({ connectionChainId: a, connectorChainId: e }) {
    super(`The current chain of the connector (id: ${e}) does not match the connection's chain (id: ${a}).`, {
      metaMessages: [
        `Current Chain ID:  ${e}`,
        `Expected Chain ID: ${a}`
      ]
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "ConnectorChainMismatchError"
    });
  }
}
class X extends I {
  constructor({ connector: a }) {
    super(`Connector "${a.name}" unavailable while reconnecting.`, {
      details: [
        "During the reconnection step, the only connector methods guaranteed to be available are: `id`, `name`, `type`, `uuid`.",
        "All other methods are not guaranteed to be available until reconnection completes and connectors are fully restored.",
        "This error commonly occurs for connectors that asynchronously inject after reconnection has already started."
      ].join(" ")
    }), Object.defineProperty(this, "name", {
      enumerable: !0,
      configurable: !0,
      writable: !0,
      value: "ConnectorUnavailableReconnectingError"
    });
  }
}
async function B(t, a = {}) {
  let e;
  if (a.connector) {
    const { connector: o } = a;
    if (t.state.status === "reconnecting" && !o.getAccounts && !o.getChainId)
      throw new X({ connector: o });
    const [O, L] = await Promise.all([
      o.getAccounts(),
      o.getChainId()
    ]);
    e = {
      accounts: O,
      chainId: L,
      connector: o
    };
  } else
    e = t.state.connections.get(t.state.current);
  if (!e)
    throw new J();
  const i = a.chainId ?? e.chainId, y = await e.connector.getChainId();
  if (y !== e.chainId)
    throw new K({
      connectionChainId: e.chainId,
      connectorChainId: y
    });
  const u = e.connector;
  if (u.getClient)
    return u.getClient({ chainId: i });
  const r = Z(a.account ?? e.accounts[0]);
  if (r.address = $(r.address), a.account && !e.accounts.some((o) => o.toLowerCase() === r.address.toLowerCase()))
    throw new Q({
      address: r.address,
      connector: u
    });
  const T = t.chains.find((o) => o.id === i), g = await e.connector.getProvider({ chainId: i });
  return S({
    account: r,
    chain: T,
    name: "Connector Client",
    transport: (o) => V(g)({ ...o, retryCount: 0 })
  });
}
async function x(t, a) {
  const { abi: e, chainId: i, connector: y, ...u } = a;
  let r;
  a.account ? r = a.account : r = (await B(t, {
    chainId: i,
    connector: y
  })).account;
  const T = t.getClient({ chainId: i }), g = _(T, U, "simulateContract"), { result: o, request: O } = await g({ ...u, abi: e, account: r });
  return {
    chainId: T.chain.id,
    result: o,
    request: { __mode: "prepared", ...O, chainId: i }
  };
}
function s(t) {
  return t.address !== void 0 && typeof t.address == "object" ? (a, e) => {
    var i;
    const y = R(a), u = A(a), r = (e == null ? void 0 : e.chainId) ?? u.chainId ?? y;
    return x(a, {
      ...e,
      ...t.functionName ? { functionName: t.functionName } : {},
      address: (i = t.address) == null ? void 0 : i[r],
      abi: t.abi
    });
  } : (a, e) => x(a, {
    ...e,
    ...t.address ? { address: t.address } : {},
    ...t.functionName ? { functionName: t.functionName } : {},
    abi: t.abi
  });
}
function E(t, a) {
  const { chainId: e, ...i } = a, y = t.getClient({ chainId: e });
  return _(y, P, "readContract")(i);
}
function n(t) {
  return t.address !== void 0 && typeof t.address == "object" ? (a, e) => {
    var i;
    const y = R(a), u = A(a), r = (e == null ? void 0 : e.chainId) ?? u.chainId ?? y;
    return E(a, {
      ...e,
      ...t.functionName ? { functionName: t.functionName } : {},
      address: (i = t.address) == null ? void 0 : i[r],
      abi: t.abi
    });
  } : (a, e) => E(a, {
    ...e,
    ...t.address ? { address: t.address } : {},
    ...t.functionName ? { functionName: t.functionName } : {},
    abi: t.abi
  });
}
async function q(t, a) {
  const { account: e, chainId: i, connector: y, __mode: u, ...r } = a;
  let T;
  typeof e == "object" && e.type === "local" ? T = t.getClient({ chainId: i }) : T = await B(t, { account: e, chainId: i, connector: y });
  const { connector: g } = A(t);
  let o;
  if (u === "prepared" || g != null && g.supportsSimulation)
    o = r;
  else {
    const { request: O } = await x(t, {
      ...r,
      account: e,
      chainId: i
    });
    o = O;
  }
  return await _(T, j, "writeContract")({
    ...o,
    ...e ? { account: e } : {},
    chain: i ? { id: i } : null
  });
}
function p(t) {
  return t.address !== void 0 && typeof t.address == "object" ? (a, e) => {
    var i;
    const y = R(a), u = A(a);
    let r;
    return e.chainId ? r = e.chainId : e.account && e.account === u.address || e.account === void 0 ? r = u.chainId : r = y, q(a, {
      ...e,
      ...t.functionName ? { functionName: t.functionName } : {},
      address: r ? (i = t.address) == null ? void 0 : i[r] : void 0,
      abi: t.abi
    });
  } : (a, e) => q(a, {
    ...e,
    ...t.address ? { address: t.address } : {},
    ...t.functionName ? { functionName: t.functionName } : {},
    abi: t.abi
  });
}
const se = [
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "executor",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "caller",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      { name: "success", internalType: "bool", type: "bool", indexed: !1 },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "ActionExecuted"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "isValidated",
        internalType: "bool",
        type: "bool",
        indexed: !1
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "ActionValidated"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "function",
    inputs: [],
    name: "VALIDATOR",
    outputs: [
      { name: "", internalType: "contract AValidator", type: "address" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "execute",
    outputs: [
      { name: "", internalType: "bool", type: "bool" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "prepare",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], pe = [
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user_", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "isAllowed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], re = [
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" }
    ],
    name: "InvalidAllocation"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotImplemented" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" }
    ],
    name: "TransferFailed"
  },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "asset",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "to", internalType: "address", type: "address", indexed: !1 },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: !1
      }
    ],
    name: "Distributed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  { type: "fallback", stateMutability: "payable" },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "allocate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "available",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "disburse",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes[]", type: "bytes[]" }],
    name: "disburseBatch",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "distributed",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "reconcile",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "total",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  { type: "receive", stateMutability: "payable" }
], k = [
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], ye = [
  { type: "error", inputs: [], name: "ClaimFailed" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "function",
    inputs: [
      { name: "claimant", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimant", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], ue = [
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "boostId", internalType: "uint256", type: "uint256" },
      { name: "incentiveId", internalType: "uint256", type: "uint256" },
      { name: "claimant", internalType: "address", type: "address" },
      { name: "data", internalType: "bytes", type: "bytes" }
    ],
    name: "validate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  }
], v = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotImplemented" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "allowList",
    outputs: [
      { name: "", internalType: "contract SimpleAllowList", type: "address" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "limit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], l = [
  {
    type: "constructor",
    inputs: [
      {
        name: "registry_",
        internalType: "contract BoostRegistry",
        type: "address"
      },
      {
        name: "protocolFeeReceiver_",
        internalType: "address",
        type: "address"
      }
    ],
    stateMutability: "nonpayable"
  },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  {
    type: "error",
    inputs: [
      { name: "caller", internalType: "address", type: "address" },
      { name: "data", internalType: "bytes", type: "bytes" }
    ],
    name: "ClaimFailed"
  },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  {
    type: "error",
    inputs: [
      { name: "expectedInterface", internalType: "bytes4", type: "bytes4" },
      { name: "instance", internalType: "address", type: "address" }
    ],
    name: "InvalidInstance"
  },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "Reentrancy" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "boostId",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      },
      {
        name: "incentiveId",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      },
      {
        name: "claimant",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "referrer",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "BoostClaimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "boostIndex",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "action",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "incentiveCount",
        internalType: "uint256",
        type: "uint256",
        indexed: !1
      },
      {
        name: "validator",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      {
        name: "allowList",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      {
        name: "budget",
        internalType: "address",
        type: "address",
        indexed: !1
      }
    ],
    name: "BoostCreated"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "FEE_DENOMINATOR",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "claimFee",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "boostId_", internalType: "uint256", type: "uint256" },
      { name: "incentiveId_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "claimIncentive",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "boostId_", internalType: "uint256", type: "uint256" },
      { name: "incentiveId_", internalType: "uint256", type: "uint256" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" },
      { name: "claimant", internalType: "address", type: "address" }
    ],
    name: "claimIncentiveFor",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "createBoost",
    outputs: [
      {
        name: "",
        internalType: "struct BoostLib.Boost",
        type: "tuple",
        components: [
          { name: "action", internalType: "contract AAction", type: "address" },
          {
            name: "validator",
            internalType: "contract AValidator",
            type: "address"
          },
          {
            name: "allowList",
            internalType: "contract AAllowList",
            type: "address"
          },
          { name: "budget", internalType: "contract ABudget", type: "address" },
          {
            name: "incentives",
            internalType: "contract AIncentive[]",
            type: "address[]"
          },
          { name: "protocolFee", internalType: "uint64", type: "uint64" },
          { name: "referralFee", internalType: "uint64", type: "uint64" },
          { name: "maxParticipants", internalType: "uint256", type: "uint256" },
          { name: "owner", internalType: "address", type: "address" }
        ]
      }
    ],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "createBoostAuth",
    outputs: [{ name: "", internalType: "contract IAuth", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "index", internalType: "uint256", type: "uint256" }],
    name: "getBoost",
    outputs: [
      {
        name: "",
        internalType: "struct BoostLib.Boost",
        type: "tuple",
        components: [
          { name: "action", internalType: "contract AAction", type: "address" },
          {
            name: "validator",
            internalType: "contract AValidator",
            type: "address"
          },
          {
            name: "allowList",
            internalType: "contract AAllowList",
            type: "address"
          },
          { name: "budget", internalType: "contract ABudget", type: "address" },
          {
            name: "incentives",
            internalType: "contract AIncentive[]",
            type: "address[]"
          },
          { name: "protocolFee", internalType: "uint64", type: "uint64" },
          { name: "referralFee", internalType: "uint64", type: "uint64" },
          { name: "maxParticipants", internalType: "uint256", type: "uint256" },
          { name: "owner", internalType: "address", type: "address" }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getBoostCount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "protocolFee",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "protocolFeeReceiver",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "referralFee",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "registry",
    outputs: [
      { name: "", internalType: "contract BoostRegistry", type: "address" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "claimFee_", internalType: "uint256", type: "uint256" }],
    name: "setClaimFee",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "auth_", internalType: "address", type: "address" }],
    name: "setCreateBoostAuth",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "protocolFee_", internalType: "uint64", type: "uint64" }],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      {
        name: "protocolFeeReceiver_",
        internalType: "address",
        type: "address"
      }
    ],
    name: "setProtocolFeeReceiver",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "referralFee_", internalType: "uint64", type: "uint64" }],
    name: "setReferralFee",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], h = [
  {
    type: "error",
    inputs: [
      {
        name: "registryType",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8"
      },
      { name: "identifier", internalType: "bytes32", type: "bytes32" }
    ],
    name: "AlreadyRegistered"
  },
  {
    type: "error",
    inputs: [
      { name: "implementation", internalType: "address", type: "address" }
    ],
    name: "NotACloneable"
  },
  {
    type: "error",
    inputs: [{ name: "identifier", internalType: "bytes32", type: "bytes32" }],
    name: "NotRegistered"
  },
  { type: "error", inputs: [], name: "Reentrancy" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "registryType",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8",
        indexed: !0
      },
      {
        name: "identifier",
        internalType: "bytes32",
        type: "bytes32",
        indexed: !0
      },
      {
        name: "baseImplementation",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      {
        name: "deployedInstance",
        internalType: "contract ACloneable",
        type: "address",
        indexed: !1
      }
    ],
    name: "Deployed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "registryType",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8",
        indexed: !0
      },
      {
        name: "identifier",
        internalType: "bytes32",
        type: "bytes32",
        indexed: !0
      },
      {
        name: "implementation",
        internalType: "address",
        type: "address",
        indexed: !1
      }
    ],
    name: "Registered"
  },
  {
    type: "function",
    inputs: [
      {
        name: "type_",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8"
      },
      { name: "base_", internalType: "address", type: "address" },
      { name: "name_", internalType: "string", type: "string" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "deployClone",
    outputs: [
      {
        name: "instance",
        internalType: "contract ACloneable",
        type: "address"
      }
    ],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "identifier_", internalType: "bytes32", type: "bytes32" }],
    name: "getBaseImplementation",
    outputs: [
      {
        name: "implementation",
        internalType: "contract ACloneable",
        type: "address"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "identifier_", internalType: "bytes32", type: "bytes32" }],
    name: "getClone",
    outputs: [
      {
        name: "clone",
        internalType: "struct BoostRegistry.Clone",
        type: "tuple",
        components: [
          {
            name: "baseType",
            internalType: "enum BoostRegistry.RegistryType",
            type: "uint8"
          },
          {
            name: "instance",
            internalType: "contract ACloneable",
            type: "address"
          },
          { name: "deployer", internalType: "address", type: "address" },
          { name: "name", internalType: "string", type: "string" }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      {
        name: "type_",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8"
      },
      { name: "base_", internalType: "address", type: "address" },
      { name: "deployer_", internalType: "address", type: "address" },
      { name: "name_", internalType: "string", type: "string" }
    ],
    name: "getCloneIdentifier",
    outputs: [{ name: "identifier", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "deployer_", internalType: "address", type: "address" }],
    name: "getClones",
    outputs: [{ name: "", internalType: "bytes32[]", type: "bytes32[]" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      {
        name: "type_",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8"
      },
      { name: "name_", internalType: "string", type: "string" }
    ],
    name: "getIdentifier",
    outputs: [{ name: "identifier", internalType: "bytes32", type: "bytes32" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      {
        name: "type_",
        internalType: "enum BoostRegistry.RegistryType",
        type: "uint8"
      },
      { name: "name_", internalType: "string", type: "string" },
      { name: "implementation_", internalType: "address", type: "address" }
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], m = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  {
    type: "error",
    inputs: [
      { name: "caller", internalType: "address", type: "address" },
      { name: "data", internalType: "bytes", type: "bytes" }
    ],
    name: "ClaimFailed"
  },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "asset",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "cgdaParams",
    outputs: [
      { name: "rewardDecay", internalType: "uint256", type: "uint256" },
      { name: "rewardBoost", internalType: "uint256", type: "uint256" },
      { name: "lastClaimTime", internalType: "uint256", type: "uint256" },
      { name: "currentReward", internalType: "uint256", type: "uint256" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "totalBudget",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], d = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  {
    type: "error",
    inputs: [
      { name: "caller", internalType: "address", type: "address" },
      { name: "data", internalType: "bytes", type: "bytes" }
    ],
    name: "ClaimFailed"
  },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "entry",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "Entry"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "asset",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "drawRaffle",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "entries",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "limit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "budgetData", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "strategy",
    outputs: [
      {
        name: "",
        internalType: "enum AERC20Incentive.Strategy",
        type: "uint8"
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], Y = [
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "asset",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [],
    name: "getIncentiveCriteria",
    outputs: [
      {
        name: "",
        internalType: "struct ERC20VariableCriteriaIncentive.IncentiveCriteria",
        type: "tuple",
        components: [
          {
            name: "criteriaType",
            internalType: "enum SignatureType",
            type: "uint8"
          },
          { name: "signature", internalType: "bytes32", type: "bytes32" },
          { name: "fieldIndex", internalType: "uint8", type: "uint8" },
          { name: "targetContract", internalType: "address", type: "address" }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "incentiveCriteria",
    outputs: [
      {
        name: "criteriaType",
        internalType: "enum SignatureType",
        type: "uint8"
      },
      { name: "signature", internalType: "bytes32", type: "bytes32" },
      { name: "fieldIndex", internalType: "uint8", type: "uint8" },
      { name: "targetContract", internalType: "address", type: "address" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "limit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "budgetData", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "totalClaimed",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], c = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "asset",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "data_", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "limit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "budgetData", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "totalClaimed",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], C = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NotImplemented" },
  { type: "error", inputs: [], name: "NotInitializing" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "executor",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "caller",
        internalType: "address",
        type: "address",
        indexed: !1
      },
      { name: "success", internalType: "bool", type: "bool", indexed: !1 },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "ActionExecuted"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "isValidated",
        internalType: "bool",
        type: "bool",
        indexed: !1
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "ActionValidated"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "function",
    inputs: [],
    name: "VALIDATOR",
    outputs: [
      { name: "", internalType: "contract AValidator", type: "address" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "execute",
    outputs: [
      { name: "", internalType: "bool", type: "bool" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "getActionClaimant",
    outputs: [
      {
        name: "",
        internalType: "struct AEventAction.ActionClaimant",
        type: "tuple",
        components: [
          {
            name: "signatureType",
            internalType: "enum AEventAction.SignatureType",
            type: "uint8"
          },
          { name: "signature", internalType: "bytes32", type: "bytes32" },
          { name: "fieldIndex", internalType: "uint8", type: "uint8" },
          { name: "targetContract", internalType: "address", type: "address" },
          { name: "chainid", internalType: "uint256", type: "uint256" }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "index", internalType: "uint256", type: "uint256" }],
    name: "getActionStep",
    outputs: [
      {
        name: "",
        internalType: "struct AEventAction.ActionStep",
        type: "tuple",
        components: [
          { name: "signature", internalType: "bytes32", type: "bytes32" },
          {
            name: "signatureType",
            internalType: "enum AEventAction.SignatureType",
            type: "uint8"
          },
          { name: "actionType", internalType: "uint8", type: "uint8" },
          { name: "targetContract", internalType: "address", type: "address" },
          { name: "chainid", internalType: "uint256", type: "uint256" },
          {
            name: "actionParameter",
            internalType: "struct AEventAction.Criteria",
            type: "tuple",
            components: [
              {
                name: "filterType",
                internalType: "enum AEventAction.FilterType",
                type: "uint8"
              },
              {
                name: "fieldType",
                internalType: "enum AEventAction.PrimitiveType",
                type: "uint8"
              },
              { name: "fieldIndex", internalType: "uint8", type: "uint8" },
              { name: "filterData", internalType: "bytes", type: "bytes" }
            ]
          }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getActionSteps",
    outputs: [
      {
        name: "",
        internalType: "struct AEventAction.ActionStep[]",
        type: "tuple[]",
        components: [
          { name: "signature", internalType: "bytes32", type: "bytes32" },
          {
            name: "signatureType",
            internalType: "enum AEventAction.SignatureType",
            type: "uint8"
          },
          { name: "actionType", internalType: "uint8", type: "uint8" },
          { name: "targetContract", internalType: "address", type: "address" },
          { name: "chainid", internalType: "uint256", type: "uint256" },
          {
            name: "actionParameter",
            internalType: "struct AEventAction.Criteria",
            type: "tuple",
            components: [
              {
                name: "filterType",
                internalType: "enum AEventAction.FilterType",
                type: "uint8"
              },
              {
                name: "fieldType",
                internalType: "enum AEventAction.PrimitiveType",
                type: "uint8"
              },
              { name: "fieldIndex", internalType: "uint8", type: "uint8" },
              { name: "filterData", internalType: "bytes", type: "bytes" }
            ]
          }
        ]
      }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getActionStepsCount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "prepare",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], ee = [
  {
    type: "function",
    inputs: [{ name: "addr", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], b = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "available", internalType: "uint256", type: "uint256" },
      { name: "required", internalType: "uint256", type: "uint256" }
    ],
    name: "InsufficientFunds"
  },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" }
    ],
    name: "InvalidAllocation"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotImplemented" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Reentrancy" },
  {
    type: "error",
    inputs: [
      { name: "asset", internalType: "address", type: "address" },
      { name: "to", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" }
    ],
    name: "TransferFailed"
  },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "asset",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "to", internalType: "address", type: "address", indexed: !1 },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: !1
      }
    ],
    name: "Distributed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  { type: "fallback", stateMutability: "payable" },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "allocate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "available",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "asset_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" }
    ],
    name: "available",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "disburse",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes[]", type: "bytes[]" }],
    name: "disburseBatch",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "distributed",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "asset_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" }
    ],
    name: "distributed",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "uint256[]", type: "uint256[]" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "onERC1155BatchReceived",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "onERC1155Received",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "reconcile",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "asset_", internalType: "address", type: "address" }],
    name: "total",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "asset_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" }
    ],
    name: "total",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  { type: "receive", stateMutability: "payable" }
], te = [
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  }
], f = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "ClaimFailed" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotClaimable" },
  { type: "error", inputs: [], name: "NotImplemented" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      { name: "data", internalType: "bytes", type: "bytes", indexed: !1 }
    ],
    name: "Claimed"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "claim",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "claimed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "claims",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "clawback",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "currentReward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "claimTarget", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isClaimable",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "limit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "bytes", type: "bytes" }],
    name: "preflight",
    outputs: [{ name: "budgetData", internalType: "bytes", type: "bytes" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "reward",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "selector",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "venue",
    outputs: [{ name: "", internalType: "address", type: "address" }],
    stateMutability: "view"
  }
], w = [
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], M = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "available", internalType: "uint8", type: "uint8" },
      { name: "id", internalType: "uint256", type: "uint256" }
    ],
    name: "InvalidIncentive"
  },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { name: "fields", internalType: "bytes1", type: "bytes1" },
      { name: "name", internalType: "string", type: "string" },
      { name: "version", internalType: "string", type: "string" },
      { name: "chainId", internalType: "uint256", type: "uint256" },
      { name: "verifyingContract", internalType: "address", type: "address" },
      { name: "salt", internalType: "bytes32", type: "bytes32" },
      { name: "extensions", internalType: "uint256[]", type: "uint256[]" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "boostId", internalType: "uint256", type: "uint256" },
      { name: "incentiveQuantity", internalType: "uint8", type: "uint8" },
      { name: "claimant", internalType: "address", type: "address" },
      { name: "incentiveData", internalType: "bytes", type: "bytes" }
    ],
    name: "hashSignerData",
    outputs: [
      { name: "hashedSignerData", internalType: "bytes32", type: "bytes32" }
    ],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "signers_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "newCaller", internalType: "address", type: "address" }],
    name: "setValidatorCaller",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "signers",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "boostId", internalType: "uint256", type: "uint256" },
      { name: "incentiveId", internalType: "uint256", type: "uint256" },
      { name: "claimant", internalType: "address", type: "address" },
      { name: "claimData", internalType: "bytes", type: "bytes" }
    ],
    name: "validate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "nonpayable"
  }
], z = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user_", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isAllowed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "users_", internalType: "address[]", type: "address[]" },
      { name: "allowed_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAllowed",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], H = [
  { type: "constructor", inputs: [], stateMutability: "nonpayable" },
  { type: "error", inputs: [], name: "AlreadyInitialized" },
  { type: "error", inputs: [], name: "CloneAlreadyInitialized" },
  { type: "error", inputs: [], name: "InitializerNotImplemented" },
  { type: "error", inputs: [], name: "InvalidInitialization" },
  { type: "error", inputs: [], name: "InvalidInitializationData" },
  { type: "error", inputs: [], name: "LengthMismatch" },
  { type: "error", inputs: [], name: "NewOwnerIsZeroAddress" },
  { type: "error", inputs: [], name: "NoHandoverRequest" },
  { type: "error", inputs: [], name: "NotInitializing" },
  { type: "error", inputs: [], name: "Unauthorized" },
  { type: "error", inputs: [], name: "Unauthorized" },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "version",
        internalType: "uint64",
        type: "uint64",
        indexed: !1
      }
    ],
    name: "Initialized"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverCanceled"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "pendingOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipHandoverRequested"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: !0
      }
    ],
    name: "OwnershipTransferred"
  },
  {
    type: "event",
    anonymous: !1,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: !0 },
      {
        name: "roles",
        internalType: "uint256",
        type: "uint256",
        indexed: !0
      }
    ],
    name: "RolesUpdated"
  },
  {
    type: "function",
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "MANAGER_ROLE",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "cancelOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "completeOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "getComponentInterface",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
    stateMutability: "pure"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "grantRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAllRoles",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "hasAnyRole",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "data_", internalType: "bytes", type: "bytes" }],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "user_", internalType: "address", type: "address" },
      { name: "", internalType: "bytes", type: "bytes" }
    ],
    name: "isAllowed",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "account_", internalType: "address", type: "address" }],
    name: "isAuthorized",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "result", internalType: "address", type: "address" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "pendingOwner", internalType: "address", type: "address" }
    ],
    name: "ownershipHandoverExpiresAt",
    outputs: [{ name: "result", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    name: "renounceRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [],
    name: "requestOwnershipHandover",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "user", internalType: "address", type: "address" },
      { name: "roles", internalType: "uint256", type: "uint256" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "payable"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "roles_", internalType: "uint256[]", type: "uint256[]" }
    ],
    name: "revokeRoles",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "user", internalType: "address", type: "address" }],
    name: "rolesOf",
    outputs: [{ name: "roles", internalType: "uint256", type: "uint256" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [
      { name: "accounts_", internalType: "address[]", type: "address[]" },
      { name: "authorized_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setAuthorized",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [
      { name: "users_", internalType: "address[]", type: "address[]" },
      { name: "denied_", internalType: "bool[]", type: "bool[]" }
    ],
    name: "setDenied",
    outputs: [],
    stateMutability: "nonpayable"
  },
  {
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
    stateMutability: "view"
  },
  {
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "payable"
  }
], oe = /* @__PURE__ */ n({
  abi: k,
  functionName: "getComponentInterface"
}), le = /* @__PURE__ */ n(
  { abi: k, functionName: "supportsInterface" }
), de = /* @__PURE__ */ n(
  { abi: v, functionName: "allowList" }
), me = /* @__PURE__ */ n({
  abi: v,
  functionName: "claimed"
}), ce = /* @__PURE__ */ n({
  abi: v,
  functionName: "claims"
}), be = /* @__PURE__ */ n({
  abi: v,
  functionName: "isClaimable"
}), Te = /* @__PURE__ */ n({
  abi: v,
  functionName: "limit"
}), fe = /* @__PURE__ */ n({
  abi: v,
  functionName: "owner"
}), we = /* @__PURE__ */ n({
  abi: v,
  functionName: "reward"
}), ve = /* @__PURE__ */ p({
  abi: v,
  functionName: "claim"
}), Me = /* @__PURE__ */ s({
  abi: v,
  functionName: "claim"
}), Ie = /* @__PURE__ */ n({
  abi: l,
  functionName: "claimFee"
}), he = /* @__PURE__ */ n({
  abi: l,
  functionName: "createBoostAuth"
}), ge = /* @__PURE__ */ n({
  abi: l,
  functionName: "getBoost"
}), Oe = /* @__PURE__ */ n({
  abi: l,
  functionName: "getBoostCount"
}), Ne = /* @__PURE__ */ n({
  abi: l,
  functionName: "protocolFee"
}), Ae = /* @__PURE__ */ n({
  abi: l,
  functionName: "protocolFeeReceiver"
}), Ce = /* @__PURE__ */ p({
  abi: l,
  functionName: "claimIncentive"
}), ze = /* @__PURE__ */ p({
  abi: l,
  functionName: "claimIncentiveFor"
}), xe = /* @__PURE__ */ p({
  abi: l,
  functionName: "setClaimFee"
}), Re = /* @__PURE__ */ p({
  abi: l,
  functionName: "setCreateBoostAuth"
}), _e = /* @__PURE__ */ p({
  abi: l,
  functionName: "setProtocolFeeReceiver"
}), He = /* @__PURE__ */ s({
  abi: l,
  functionName: "claimIncentive"
}), Ee = /* @__PURE__ */ s({
  abi: l,
  functionName: "claimIncentiveFor"
}), qe = /* @__PURE__ */ s({
  abi: l,
  functionName: "setClaimFee"
}), De = /* @__PURE__ */ s({
  abi: l,
  functionName: "setCreateBoostAuth"
}), Fe = /* @__PURE__ */ s({
  abi: l,
  functionName: "setProtocolFeeReceiver"
}), Be = /* @__PURE__ */ n({
  abi: h,
  functionName: "getBaseImplementation"
}), ke = /* @__PURE__ */ n({
  abi: h,
  functionName: "getCloneIdentifier"
}), Le = /* @__PURE__ */ n({
  abi: h,
  functionName: "getClones"
}), Ue = /* @__PURE__ */ p({
  abi: h,
  functionName: "deployClone"
}), Pe = /* @__PURE__ */ p({
  abi: h,
  functionName: "register"
}), je = /* @__PURE__ */ s({
  abi: h,
  functionName: "deployClone"
}), Se = /* @__PURE__ */ s({
  abi: h,
  functionName: "register"
}), Ve = /* @__PURE__ */ n({
  abi: m,
  functionName: "asset"
}), Ze = /* @__PURE__ */ n({
  abi: m,
  functionName: "cgdaParams"
}), $e = /* @__PURE__ */ n({
  abi: m,
  functionName: "claimed"
}), Ge = /* @__PURE__ */ n({
  abi: m,
  functionName: "claims"
}), We = /* @__PURE__ */ n({
  abi: m,
  functionName: "currentReward"
}), Je = /* @__PURE__ */ n({
  abi: m,
  functionName: "isClaimable"
}), Qe = /* @__PURE__ */ n({
  abi: m,
  functionName: "owner"
}), Ke = /* @__PURE__ */ n({
  abi: m,
  functionName: "reward"
}), Xe = /* @__PURE__ */ n({
  abi: m,
  functionName: "totalBudget"
}), Ye = /* @__PURE__ */ p({
  abi: m,
  functionName: "claim"
}), et = /* @__PURE__ */ p({
  abi: m,
  functionName: "clawback"
}), tt = /* @__PURE__ */ s({
  abi: m,
  functionName: "claim"
}), nt = /* @__PURE__ */ s({
  abi: m,
  functionName: "clawback"
}), at = /* @__PURE__ */ n({
  abi: d,
  functionName: "asset"
}), it = /* @__PURE__ */ n({
  abi: d,
  functionName: "claimed"
}), st = /* @__PURE__ */ n({
  abi: d,
  functionName: "claims"
}), pt = /* @__PURE__ */ n(
  { abi: d, functionName: "currentReward" }
), rt = /* @__PURE__ */ n({
  abi: d,
  functionName: "entries"
}), yt = /* @__PURE__ */ n({
  abi: d,
  functionName: "isClaimable"
}), ut = /* @__PURE__ */ n({
  abi: d,
  functionName: "limit"
}), ot = /* @__PURE__ */ n({
  abi: d,
  functionName: "owner"
}), lt = /* @__PURE__ */ n({
  abi: d,
  functionName: "reward"
}), dt = /* @__PURE__ */ n({
  abi: d,
  functionName: "strategy"
}), mt = /* @__PURE__ */ p({
  abi: d,
  functionName: "claim"
}), ct = /* @__PURE__ */ p({
  abi: d,
  functionName: "clawback"
}), bt = /* @__PURE__ */ p({
  abi: d,
  functionName: "drawRaffle"
}), Tt = /* @__PURE__ */ s(
  { abi: d, functionName: "claim" }
), ft = /* @__PURE__ */ s({
  abi: d,
  functionName: "clawback"
}), wt = /* @__PURE__ */ s({
  abi: d,
  functionName: "drawRaffle"
}), vt = /* @__PURE__ */ n({
  abi: Y,
  functionName: "getIncentiveCriteria"
}), Mt = /* @__PURE__ */ n(
  { abi: c, functionName: "asset" }
), It = /* @__PURE__ */ n({
  abi: c,
  functionName: "claimed"
}), ht = /* @__PURE__ */ n({
  abi: c,
  functionName: "claims"
}), gt = /* @__PURE__ */ n({
  abi: c,
  functionName: "currentReward"
}), Ot = /* @__PURE__ */ n({
  abi: c,
  functionName: "isClaimable"
}), Nt = /* @__PURE__ */ n(
  { abi: c, functionName: "limit" }
), At = /* @__PURE__ */ n(
  { abi: c, functionName: "owner" }
), Ct = /* @__PURE__ */ n({
  abi: c,
  functionName: "reward"
}), zt = /* @__PURE__ */ n({
  abi: c,
  functionName: "totalClaimed"
}), xt = /* @__PURE__ */ p({
  abi: c,
  functionName: "claim"
}), Rt = /* @__PURE__ */ p({
  abi: c,
  functionName: "clawback"
}), _t = /* @__PURE__ */ s({
  abi: c,
  functionName: "claim"
}), Ht = /* @__PURE__ */ s({
  abi: c,
  functionName: "clawback"
}), Et = /* @__PURE__ */ n({
  abi: C,
  functionName: "getActionClaimant"
}), qt = /* @__PURE__ */ n({
  abi: C,
  functionName: "getActionSteps"
}), Dt = /* @__PURE__ */ p({
  abi: C,
  functionName: "execute"
}), Ft = /* @__PURE__ */ s({
  abi: C,
  functionName: "execute"
}), Bt = /* @__PURE__ */ n({
  abi: ee,
  functionName: "isAuthorized"
}), kt = /* @__PURE__ */ n({
  abi: b,
  functionName: "available"
}), Lt = /* @__PURE__ */ n({
  abi: b,
  functionName: "distributed"
}), Ut = /* @__PURE__ */ n({
  abi: b,
  functionName: "owner"
}), Pt = /* @__PURE__ */ n({
  abi: b,
  functionName: "total"
}), jt = /* @__PURE__ */ p({
  abi: b,
  functionName: "allocate"
}), St = /* @__PURE__ */ p({
  abi: b,
  functionName: "clawback"
}), Vt = /* @__PURE__ */ p({
  abi: b,
  functionName: "disburse"
}), Zt = /* @__PURE__ */ p({
  abi: b,
  functionName: "disburseBatch"
}), $t = /* @__PURE__ */ s({
  abi: b,
  functionName: "allocate"
}), Gt = /* @__PURE__ */ s({
  abi: b,
  functionName: "clawback"
}), Wt = /* @__PURE__ */ s({
  abi: b,
  functionName: "disburse"
}), Jt = /* @__PURE__ */ s({
  abi: b,
  functionName: "disburseBatch"
}), Qt = /* @__PURE__ */ n(
  { abi: te, functionName: "isAuthorized" }
), Kt = /* @__PURE__ */ n({
  abi: f,
  functionName: "claimed"
}), Xt = /* @__PURE__ */ n({
  abi: f,
  functionName: "claims"
}), Yt = /* @__PURE__ */ n({
  abi: f,
  functionName: "currentReward"
}), en = /* @__PURE__ */ n({
  abi: f,
  functionName: "isClaimable"
}), tn = /* @__PURE__ */ n({
  abi: f,
  functionName: "limit"
}), nn = /* @__PURE__ */ n({
  abi: f,
  functionName: "reward"
}), an = /* @__PURE__ */ n({
  abi: f,
  functionName: "selector"
}), sn = /* @__PURE__ */ n({
  abi: f,
  functionName: "venue"
}), pn = /* @__PURE__ */ p({
  abi: f,
  functionName: "claim"
}), rn = /* @__PURE__ */ s({
  abi: f,
  functionName: "claim"
}), yn = /* @__PURE__ */ n({
  abi: w,
  functionName: "hasAllRoles"
}), un = /* @__PURE__ */ n({
  abi: w,
  functionName: "hasAnyRole"
}), on = /* @__PURE__ */ n({
  abi: w,
  functionName: "isAuthorized"
}), ln = /* @__PURE__ */ n({
  abi: w,
  functionName: "rolesOf"
}), dn = /* @__PURE__ */ p({
  abi: w,
  functionName: "grantRoles"
}), mn = /* @__PURE__ */ p({
  abi: w,
  functionName: "revokeRoles"
}), cn = /* @__PURE__ */ p({
  abi: w,
  functionName: "setAuthorized"
}), bn = /* @__PURE__ */ s({
  abi: w,
  functionName: "grantRoles"
}), Tn = /* @__PURE__ */ s({
  abi: w,
  functionName: "revokeRoles"
}), fn = /* @__PURE__ */ s({
  abi: w,
  functionName: "setAuthorized"
}), wn = /* @__PURE__ */ n({
  abi: M,
  functionName: "hashSignerData"
}), vn = /* @__PURE__ */ n({
  abi: M,
  functionName: "signers"
}), Mn = /* @__PURE__ */ p({
  abi: M,
  functionName: "setAuthorized"
}), In = /* @__PURE__ */ p({
  abi: M,
  functionName: "setValidatorCaller"
}), hn = /* @__PURE__ */ p({
  abi: M,
  functionName: "validate"
}), gn = /* @__PURE__ */ s({
  abi: M,
  functionName: "setAuthorized"
}), On = /* @__PURE__ */ s({
  abi: M,
  functionName: "setValidatorCaller"
}), Nn = /* @__PURE__ */ s({
  abi: M,
  functionName: "validate"
}), An = /* @__PURE__ */ n({
  abi: z,
  functionName: "isAllowed"
}), Cn = /* @__PURE__ */ n({
  abi: z,
  functionName: "owner"
}), zn = /* @__PURE__ */ p(
  { abi: z, functionName: "setAllowed" }
), xn = /* @__PURE__ */ s({
  abi: z,
  functionName: "setAllowed"
}), Rn = /* @__PURE__ */ n({
  abi: H,
  functionName: "isAllowed"
}), _n = /* @__PURE__ */ p({
  abi: H,
  functionName: "setDenied"
}), Hn = /* @__PURE__ */ s({
  abi: H,
  functionName: "setDenied"
});
export {
  de as $,
  z as A,
  Be as B,
  Le as C,
  ke as D,
  Qt as E,
  pe as F,
  $t as G,
  jt as H,
  H as I,
  Gt as J,
  St as K,
  Wt as L,
  fn as M,
  Vt as N,
  c as O,
  Zt as P,
  Ut as Q,
  v as R,
  Pt as S,
  d as T,
  kt as U,
  Lt as V,
  fe as W,
  ce as X,
  we as Y,
  Jt as Z,
  me as _,
  h as a,
  Mt as a$,
  Te as a0,
  Me as a1,
  ve as a2,
  be as a3,
  Cn as a4,
  An as a5,
  xn as a6,
  zn as a7,
  Rn as a8,
  Hn as a9,
  ct as aA,
  yt as aB,
  wt as aC,
  bt as aD,
  Xt as aE,
  Yt as aF,
  nn as aG,
  Kt as aH,
  sn as aI,
  tn as aJ,
  an as aK,
  rn as aL,
  pn as aM,
  en as aN,
  vn as aO,
  wn as aP,
  Nn as aQ,
  hn as aR,
  gn as aS,
  Mn as aT,
  On as aU,
  In as aV,
  At as aW,
  zt as aX,
  gt as aY,
  ht as aZ,
  It as a_,
  _n as aa,
  Qe as ab,
  Ge as ac,
  Ke as ad,
  $e as ae,
  Ve as af,
  Ze as ag,
  Xe as ah,
  tt as ai,
  Ye as aj,
  nt as ak,
  et as al,
  Je as am,
  We as an,
  ot as ao,
  pt as ap,
  st as aq,
  it as ar,
  at as as,
  dt as at,
  lt as au,
  ut as av,
  rt as aw,
  Tt as ax,
  mt as ay,
  ft as az,
  l as b,
  Ct as b0,
  Nt as b1,
  _t as b2,
  xt as b3,
  Ht as b4,
  Rt as b5,
  Ot as b6,
  ye as b7,
  C as b8,
  qt as b9,
  Et as ba,
  Ft as bb,
  Dt as bc,
  Y as bd,
  vt as be,
  He as bf,
  Ce as bg,
  Ee as bh,
  ze as bi,
  ge as bj,
  Oe as bk,
  Bt as bl,
  he as bm,
  De as bn,
  Re as bo,
  Ne as bp,
  Ae as bq,
  Fe as br,
  _e as bs,
  Ie as bt,
  qe as bu,
  xe as bv,
  f as c,
  te as d,
  bn as e,
  cn as f,
  m as g,
  dn as h,
  Tn as i,
  mn as j,
  un as k,
  b as l,
  on as m,
  yn as n,
  ln as o,
  ue as p,
  le as q,
  oe as r,
  Se as s,
  se as t,
  Pe as u,
  je as v,
  Ue as w,
  M as x,
  re as y,
  w as z
};
//# sourceMappingURL=generated-B7VaSah4.js.map
