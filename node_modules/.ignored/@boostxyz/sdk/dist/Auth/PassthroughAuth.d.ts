import { passthroughAuthAbi } from '@boostxyz/evm';
import type { Address, ContractEventName } from 'viem';
import { Deployable, type DeployableOptions, type GenericDeployableParams } from '../Deployable/Deployable';
import type { GenericLog, ReadParams } from '../utils';
export { passthroughAuthAbi };
/**
 * A generic `viem.Log` event with support for `PassthroughAuth` event types.
 *
 * @export
 * @typedef {PassthroughAuthLog}
 * @template {ContractEventName<
 *     typeof passthroughAuthAbi
 *   >} [event=ContractEventName<typeof passthroughAuthAbi>]
 */
export type PassthroughAuthLog<event extends ContractEventName<typeof passthroughAuthAbi> = ContractEventName<typeof passthroughAuthAbi>> = GenericLog<typeof passthroughAuthAbi, event>;
/**
 *  A simple implementation of a Validator that verifies a given signature and checks the recovered address against a set of authorized signers
 *
 * @export
 * @class PassthroughAuth
 * @typedef {PassthroughAuth}
 * @extends {DeployableTarget<PassthroughAuthPayload>}
 */
export declare class PassthroughAuth extends Deployable<any, typeof passthroughAuthAbi> {
    readonly abi: readonly [{
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "user";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "isAuthorized";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
    }];
    isAuthorized(address: Address, params?: ReadParams<typeof passthroughAuthAbi, 'isAuthorized'>): Promise<boolean>;
    /**
     * @inheritdoc
     *
     * @public
     * @param {?PassthroughAuthPayload} [_payload]
     * @param {?DeployableOptions} [_options]
     * @returns {GenericDeployableParams}
     */
    buildParameters(_payload?: never, _options?: DeployableOptions): GenericDeployableParams;
}
//# sourceMappingURL=PassthroughAuth.d.ts.map