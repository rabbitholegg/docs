import type { Address } from 'viem';
import type { DeployableOptions } from '../Deployable/Deployable';
import { ManagedBudget } from './ManagedBudget';
export { ManagedBudget, };
/**
 * A union type representing all valid protocol Budget implementations
 *
 * @export
 * @typedef {Budget}
 */
export type Budget = ManagedBudget;
/**
 * A map of Budget component interfaces to their constructors.
 *
 * @type {{ "0xa0109882": typeof ManagedBudget; }}
 */
export declare const BudgetByComponentInterface: {
    [x: string]: typeof ManagedBudget;
};
/**
 * A function that will read a contract's component interface using `getComponentInterface` and return the correct instantiated instance.
 *
 * @export
 * @async
 * @param {DeployableOptions} options
 * @param {Address} address
 * @returns {Promise<ManagedBudget>}
 * @throws {@link InvalidComponentInterfaceError}
 */
export declare function budgetFromAddress(options: DeployableOptions, address: Address): Promise<ManagedBudget>;
//# sourceMappingURL=Budget.d.ts.map