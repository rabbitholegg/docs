import { p as a } from "../generated-B7VaSah4.js";
import { b as i } from "../componentInterfaces-RXBMI5yH.js";
import { readContract as m } from "@wagmi/core";
import { InvalidComponentInterfaceError as c } from "../errors.js";
import { SignerValidator as f } from "./SignerValidator.js";
const e = {
  [i]: f
};
async function I(o, r) {
  const t = await m(o.config, {
    abi: a,
    functionName: "getComponentInterface",
    address: r
  }), n = e[t];
  if (!n)
    throw new c(
      Object.keys(e),
      t
    );
  return new n(o, r);
}
export {
  f as SignerValidator,
  e as ValidatorByComponentInterface,
  I as validatorFromAddress
};
//# sourceMappingURL=Validator.js.map
