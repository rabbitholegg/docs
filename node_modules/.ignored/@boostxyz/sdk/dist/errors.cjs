"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=require("viem");class i extends Error{constructor(){super('No "BoostCreated" log was emitted from which to extract boostId')}}class d extends Error{constructor(){super("Attempted to call contract method without providing an address")}}class c extends Error{constructor(r){super("Attempted to deploy a contract that already has an address configured"),this.address=r}}class l extends Error{constructor(){super("Implementing class did not properly override the `buildParameters` method")}}class u extends Error{constructor(){super("Expected an an owner to be provided in configuration or an account to exist on Wagmi config.")}}class p extends Error{constructor(){super("Expected a valid Wagmi configuration to be available either on Deployable, or as argument to deploy.")}}class E extends Error{constructor(){super("Expected a valid payload to be available either on Deployable or as argument to deploy.")}}class g extends Error{constructor(r){super("Expected a contract address to exist on receipt.",{cause:r}),this.receipt=r}}class h extends Error{constructor(r,o){super("Address provided does not match any expected protocol interface",{cause:{expected:r,received:o}}),this.expected=[],this.received=a.zeroHash,this.expected=r,this.received=o}}class m extends Error{constructor(r,o){super(`Parameter is not transparently stored onchain. Parameter ${r} in event ${o.name} cannot be used in an action`,{cause:o}),this.event=o,this.input_param_idx=r}}class v extends Error{constructor(r){super("Did not provide a valid FungibleTransferPayload or ERC1155 transfer payload.",{cause:r}),this.received=r}}class y extends Error{constructor(r){super(`Budget needs to explicitly authorize ${r}. You can retrieve this value from BoostCore.address`)}}class b extends Error{constructor(){super("Budgets must be preinitialized before being used with a new Boost")}}class x extends Error{constructor(r){super(`Incentive not cloneable: ${r.constructor.name}`)}}class f extends Error{constructor(){super("Must supply at least one action step")}}class C extends Error{constructor(){super("Cannot supply more than 4 action steps with current protocol version")}}class I extends Error{constructor(r){super(`No known ABI for given signature: ${r}`)}}class A extends Error{constructor(){super("Logs are required for validation")}}class t extends Error{constructor(r,{fieldValue:o,criteria:n,...s}){switch(super(r),this.fieldValue=o,this.criteria=n,!0){case"log"in s:this.log=s.log;break;case"decodedArgs"in s:this.decodedArgs=s.decodedArgs}}}class D extends t{constructor(r){super("Decoded Args are malformed; Check which params are indexed",r)}}class N extends t{constructor(r){super("Field value is undefined",r)}}class P extends t{constructor(r){super("Numerical comparisons cannot be used with non-numerical criteria",r)}}class w extends Error{constructor(r,o){super(`Failed to decode function data: ${o.message}`),this.name="FunctionDataDecodeError",this.abi=r,this.originalError=o}}class F extends t{constructor(r){super("Filter can only be used with bytes or string field type",r)}}class M extends t{constructor(r){super("Invalid FilterType provided",r)}}class B extends Error{constructor(){super("Provided Wagmi configuration does not define `chainId` property with which to target protocol contracts"),this.name="NoConnectedChainIdError"}}class U extends Error{constructor(r,o){super(`Provided Wagmi configuration supplied a "chainId" where protocol is not deployed, provided: ${r}, but valid chains are: ${o}`),this.name="InvalidProtocolChainIdError"}}class T extends Error{constructor(r,o="Unable to fetch Incentive Criteria from contract"){super(o+(r?`: ${r.message}`:"")),this.name="IncentiveCriteriaNotFoundError"}}class V extends Error{constructor(r,o=`No logs found for event signature ${r}`){super(o),this.name="NoMatchingLogsError"}}class $ extends Error{constructor(r="unknown",o=`Invalid criteria type ${r}`){super(o),this.name="InvalidCriteriaTypeError"}}class z extends Error{constructor(r="Issue decoding args"){super(r),this.name="DecodedArgsError"}}exports.BoostCoreNoIdentifierEmitted=i;exports.BudgetMustAuthorizeBoostCore=y;exports.ContractAddressRequiredError=d;exports.DecodedArgsError=z;exports.DecodedArgsMalformedError=D;exports.DeployableAlreadyDeployedError=c;exports.DeployableBuildParametersUnspecifiedError=l;exports.DeployableMissingPayloadError=E;exports.DeployableUnknownOwnerProvidedError=u;exports.DeployableWagmiConfigurationRequiredError=p;exports.FieldActionValidationError=t;exports.FieldValueNotComparableError=F;exports.FieldValueUndefinedError=N;exports.FunctionDataDecodeError=w;exports.IncentiveCriteriaNotFoundError=T;exports.IncentiveNotCloneableError=x;exports.InvalidComponentInterfaceError=h;exports.InvalidCriteriaTypeError=$;exports.InvalidNumericalCriteriaError=P;exports.InvalidProtocolChainIdError=U;exports.MustInitializeBudgetError=b;exports.NoConnectedChainIdError=B;exports.NoContractAddressUponReceiptError=g;exports.NoEventActionStepsProvidedError=f;exports.NoMatchingLogsError=V;exports.TooManyEventActionStepsProvidedError=C;exports.UnknownTransferPayloadSupplied=v;exports.UnparseableAbiParamError=m;exports.UnrecognizedFilterTypeError=M;exports.ValidationAbiMissingError=I;exports.ValidationLogsMissingError=A;
//# sourceMappingURL=errors.cjs.map
